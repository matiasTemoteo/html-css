@charset "UTF-8";

/*
    It is possible in CSS grid-layout, use short-hand to simplify the
    declaration of the 'grid-row-start' and 'grid-row-end', and also
    of the 'grid-column-start' and 'grid-column-end'.

    To simplify the rows declaration, we use 'grid-row', when it follows
    the syntax: ('grid-row-start' / 'grid-row-end').

    Example:

      - grid-row: 1 / 2;
      - grid-row: 2 / 3;

    To simplify the columns declaration, we use 'grid-column', whe it follows
    the syntax: ('grid-column-start' / 'grid-column-end').

    Example:

      - grid-column: 2 / 2;
      - grid-column: 1 / 3;

    
      There is another way to indicate the end line for row and column, that
      is the 'span', it informas how many lines will be expanded after the
      start line. To use, just put span followed by the value referred.

      Example:

        - grid-row-start: 1;
          grid-row-end: span 2;

          * In this example, the area start in horizontal line 1 and ends
            in horizontal line 3 (1 + 2 = 3).

        - grid-column-start: 2;
          grid-column-end: span 4;

          * In this example, the area start in the vertical line 2 and
            ends in the vertical line 6 (2 + 4 = 6).

      It is also possible to use the span in the simplifications 'grid-row'
      and 'grid-column'.

      Example:

        - grid-row: 1 / span 3;
        - grid-column: 2 / span 4;

*/

.container {
    display: grid;
    gap: 2px;
    grid-template: repeat(3, 100px) / repeat(4, 4fr);
}

#box1 {
  /*
    grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 1;
    grid-column-end: 5;
  */

    grid-row: 1 / 2;
    grid-column: 1 / 5;

    background-color: lightcoral;
}

#box2 {
  /*
    grid-row-start: 2;
    grid-row-end: 4;
    grid-column-start: 1;
    grid-column-end: 3;
  */

    grid-row: 2 / span 2;
    grid-column: 1 / 3;

    background-color: lightgreen;
}

#box3 {
  /*
    grid-row-start: 2;
    grid-row-end: 4;
    grid-column-start: 3;
    grid-column-end: 5;
  */

    grid-row: 2 / 4;
    grid-column: 3 / span 2;

    background-color: lightseagreen;
}