@charset "UTF-8";

/*
   There is another way to simplify the declarations of area in grid-layout,
   even more than 'grid-row' and 'grid-column', this property is the
   'grid-area', when it will be informed the four values (row-start, column-start,
   row-end and column-end) at the same time in one unique declaration.

   The sytax is:

    - grid-area: 'grid-row-start' / 'grid-column-start' / 'grid-row-end' / 'grid-column-end';

    Examples:

     - grid-area: 1 / 1 / 3 / 4;

     * In this example, the row start at 1 and ends at 3, while the column
       starts at 1 and ends at 4.

    It is possible use the span in this short-hand also.

    Example:

      - grid-area: 1 / 2 / span 2 / 5;

      * In this example, the row starts at 1 and expand by 2 going to 3, while
        the column starts at 2 and expands by 5 going to 7.

*/

.container {
    display: grid;
    gap: 2px;
    grid-template: repeat(3, 100px) / repeat(4, 4fr);
}

#box1 {
  /*
    grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 1;
    grid-column-end: 5;
  */

  /*
    grid-row: 1 / 2;
    grid-column: 1 / 5;
  */

    grid-area: 1 / 1 / 2 / 5;

    background-color: lightcoral;
}

#box2 {
  /*
    grid-row-start: 2;
    grid-row-end: 4;
    grid-column-start: 1;
    grid-column-end: 3;
  */

  /*
    grid-row: 2 / span 2;
    grid-column: 1 / 3;
  */

    grid-area: 2 / 1 / span 2 / 3;

    background-color: lightgreen;
}

#box3 {
  /*
    grid-row-start: 2;
    grid-row-end: 4;
    grid-column-start: 3;
    grid-column-end: 5;
  */

  /*
    grid-row: 2 / 4;
    grid-column: 3 / span 2;
  */
  
    grid-area: 2 / 3 / 4 / span 2;

    background-color: lightseagreen;
}